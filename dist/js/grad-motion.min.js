var GradMotion=function(t){"use strict";function s(t,s,e){return Math.min(Math.max(t,s),e)}function e(t){return Array.isArray(t)&&t.every(Array.isArray)}function r(t){let s=t;for(e(t)&&(s=t[0]);s.length<20;)s=s.concat(s);return s}class i{#t;#s;#e;#r;#i;#a;#n;constructor({element:t,colors:s,styleOptions:e,tickSpeed:r,overlay:a,classes:n}){if(new.target===i)throw new Error("Cannot instantiate an abstract class directly. Please extend this class and implement the required methods.");this.#t=t,this.#s=s,this.#e=this.createStyleOptionsProxy({animDuration:30}),this.#r=r||1,this.#i=a||{isPresent:!1},this.#a=n||"",this.#n=0}createStyleOptionsProxy(t){const s=this;let e=!1;return new Proxy(t,{set:(t,r,i)=>(t[r]=i,e||(e=!0,s.applyGradient(),e=!1),!0)})}get colors(){return this.#s}set colors(t){this.#s=t,2==t.length&&(this.#e.triColor=!1),3==t.length&&(this.#e.triColor=!0),this.applyGradient()}get element(){return this.#t}set element(t){this.#t=t}get animationDuration(){return this.#e.animDuration}set animationDuration(t){this.#e.animDuration=t,this.updateAnimationDuration()}updateAnimationDuration(){let t=this.#t.querySelector(".ngrad-background"),s=this.#e.animDuration;t.style.setProperty("--anim-duration",`${s}s`)}get tickSpeed(){return this.#r}set tickSpeed(t){this.#r=t}get styleOptions(){return this.#e}set styleOptions(t){this.#e=this.createStyleOptionsProxy({...this.#e,...t}),this.applyGradient()}setBaseSize(){let t=this.#e.baseSize;return Array.isArray(t)&&(t=t[0]),this.styleOptions.seamless&&(t=this.element.offsetWidth/this.styleOptions.parts),t}generateGradientString(){throw new Error("generateGradientString() must be implemented by subclasses")}gradientType(){throw new Error("gradientType() must be implemented by subclasses")}setUpBackgroundDiv(){let t=this.#t.querySelector(".ngrad-wrapper");t&&t.remove();const s=document.createElement("div");s.className="ngrad-wrapper";const e=document.createElement("div");e.className="ngrad-background";const r=document.createElement("div");r.className="ngrad-overlay",this.#a&&((this.#a.includes("nbg-move-lr")||this.#a.includes("nbg-move-rl"))&&("Linear"==this.gradientType()||"Abstract"==this.gradientType()?(this.#a+=" ngrad-big",e.style.width="1000%"):e.style.width="200%"),(this.#a.includes("nbg-move-tb")||this.#a.includes("nbg-move-bt"))&&("Linear"==this.gradientType()||"Abstract"==this.gradientType()?(this.#a+=" ngrad-big",e.style.height="1000%"):e.style.height="200%")),this.#a&&(e.className=`ngrad-background ${this.#a}`),s.appendChild(e),this.#i.isPresent&&s.appendChild(r),this.#t.appendChild(s);"static"===window.getComputedStyle(this.#t).position&&(this.#t.style.position="relative"),this.#i.background&&r.style.setProperty("--bg-string",`${this.#i.background}`)}applyGradient(){this.setUpBackgroundDiv();const t=this.#t.querySelector(".ngrad-background");if(t.style.background=this.generateGradientString(),"Linear"!=this.constructor.gradientType){let s=this.#e.baseSize,e=this.#e.ratio||1;if(Array.isArray(s)){if(this.#e.seamless)if(t.classList.contains("nbg-move-lr")||t.classList.contains("nbg-move-rl")){let e=s[0];s[0]=Number((t.offsetWidth/this.#e.parts).toFixed(2)),s[1]=s[1]*s[0]/e}else{let e=s[1];s[1]=Number((t.offsetHeight/this.#e.parts).toFixed(2)),s[0]=s[1]*s[0]/e}t.style.backgroundSize=`${s[0]}px ${s[1]}px`}else this.#e.seamless&&(s=t.classList.contains("nbg-move-lr")||t.classList.contains("nbg-move-rl")?Number((t.offsetWidth/(2*this.#e.parts)).toFixed(2)):Number((t.offsetHeight/(2*this.#e.parts)).toFixed(2))),t.style.backgroundSize=`${s*e}px ${s}px`}this.updateAnimationDuration()}animateGradient(){this.applyGradient();let t=this.#e.updateVariable;const s=()=>{this.#t.querySelector(".ngrad-background").style.setProperty("--tick",`${this.#n}`),t||e(this.#s)?(["ZigZag","PolkaDots","UpDownTriangles","DoubleTriangles","ThreeTriangles","Cross","CrissCross","AdjacentTriangles","Waves","Weave","Abstract","Linear"].includes(this.gradientType())&&this.#t.querySelector(".ngrad-background").style.setProperty("--tick-sin",`${Math.abs(Math.sin(this.#n)).toFixed(2)}`),["Abstract","PolkaDots"].includes(this.gradientType())&&this.#t.querySelector(".ngrad-background").style.setProperty("--tick-cos",`${Math.abs(Math.cos(this.#n)).toFixed(2)}`),this.#n+=.01*this.#r,this.#n=Number(Number(this.#n).toFixed(3)),this.#n>100&&(this.#n=0)):(this.#t.querySelector(".ngrad-background").style.setProperty("--tick-sin","1"),this.#t.querySelector(".ngrad-background").style.setProperty("--tick-cos","1"),this.#t.querySelector(".ngrad-background").style.setProperty("--tick-tan","1")),requestAnimationFrame(s)};requestAnimationFrame(s)}}return t.Abstract=class extends i{constructor(t){const{styleOptions:s={}}=t;super(t),this.styleOptions={centers:[0,0,-30,30,100,100],blendMode:"difference",updateVariable:!1,...s}}gradientType(){return"Abstract"}generateGradientString(){let t="",s=r(this.colors);const e=this.element.querySelector(".ngrad-background");let i=this.styleOptions.centers,a=this.styleOptions.updateVariable,n=this.styleOptions.blendMode;return e.style.backgroundBlendMode=n,a&&(e.style.setProperty("--first-stop",`calc(var(--tick-sin) * ${i[0]}%) calc(var(--tick-cos) * ${i[1]}%)`),e.style.setProperty("--second-stop",`calc(var(--tick-sin) * ${i[4]}%) calc(var(--tick-cos) * ${i[5]}%)`)),t+=a?`radial-gradient(circle at var(--first-stop), ${s[0]}, ${s[1]}, ${s[2]}, ${s[3]}, ${s[4]}, ${s[5]}), conic-gradient(from 0deg at ${i[2]}% ${i[3]}%, ${s[0]}, ${s[1]}, ${s[2]}, ${s[3]}, ${s[4]}, ${s[5]}), conic-gradient(from 0deg at ${100+Math.abs(i[2])}% ${100-i[3]}%, ${s[0]}, ${s[1]}, ${s[2]}, ${s[3]}, ${s[4]}, ${s[5]}), radial-gradient(circle at var(--second-stop), ${s[0]}, ${s[1]}, ${s[2]}, ${s[3]}, ${s[4]}, ${s[5]})`:`radial-gradient(circle at ${i[0]}% ${i[1]}%, ${s[0]}, ${s[1]}, ${s[2]}, ${s[3]}, ${s[4]}, ${s[5]}), conic-gradient(from 0deg at ${i[2]}% ${i[3]}%, ${s[0]}, ${s[1]}, ${s[2]}, ${s[3]}, ${s[4]}, ${s[5]}), conic-gradient(from 0deg at ${100+Math.abs(i[2])}% ${100-i[3]}%, ${s[0]}, ${s[1]}, ${s[2]}, ${s[3]}, ${s[4]}, ${s[5]}), radial-gradient(circle at ${i[4]}% ${i[5]}%, ${s[0]}, ${s[1]}, ${s[2]}, ${s[3]}, ${s[4]}, ${s[5]})`,t}},t.Bricks=class extends i{constructor(t){const{styleOptions:s={}}=t;super(t),this.styleOptions={baseSize:100,quadColors:!1,brickOutline:"#000",...s}}gradientType(){return"Bricks"}generateGradientString(){let t=this.styleOptions.baseSize,s=this.styleOptions.quadColors,e=this.styleOptions.brickOutline,i="",a=r(this.colors);return i+=s?`linear-gradient(335deg, ${a[0]} ${23*t/58}px, transparent ${23*t/58}px) 0px ${2*t/58}px,\n  linear-gradient(155deg, ${a[1]} ${23*t/58}px, transparent ${23*t/58}px) ${4*t/58}px ${35*t/58}px,\n  linear-gradient(335deg, ${a[2]} ${23*t/58}px, transparent ${23*t/58}px) ${29*t/58}px ${31*t/58}px,\n  linear-gradient(155deg, ${a[3]} ${23*t/58}px, transparent ${23*t/58}px) ${34*t/58}px ${6*t/58}px, ${e}`:`linear-gradient(335deg, ${a[0]} ${23*t/58}px, transparent ${23*t/58}px) 0px ${2*t/58}px,\n    linear-gradient(155deg, ${a[1]} ${23*t/58}px, transparent ${23*t/58}px) ${4*t/58}px ${35*t/58}px,\n    linear-gradient(335deg, ${a[0]} ${23*t/58}px, transparent ${23*t/58}px) ${29*t/58}px ${31*t/58}px,\n    linear-gradient(155deg, ${a[1]} ${23*t/58}px, transparent ${23*t/58}px) ${34*t/58}px ${6*t/58}px, ${e}`,i}},t.GradMotion=i,t.Linear=class extends i{constructor(t){const{styleOptions:s={}}=t;super(t),this.styleOptions={angle:0,updateVariable:!1,...s}}gradientType(){return"Linear"}generateGradientString(){let t="",s=r(this.colors),i=this.styleOptions.angle,a=this.styleOptions.updateVariable;if(e(this.colors)){let e=this.colors[1];t+=a?`linear-gradient(calc(var(--tick) * 60deg + ${i}deg), color-mix(in srgb, ${s[0]} calc(var(--tick-sin) * 100%), ${e[0]}), color-mix(in srgb, ${s[1]} calc(var(--tick-sin) * 100%), ${e[1]}))`:`linear-gradient(${i}deg, color-mix(in srgb, ${s[0]} calc(var(--tick-sin) * 100%), ${e[0]}), color-mix(in srgb, ${s[1]} calc(var(--tick-sin) * 100%), ${e[1]}))`}else t+=a?`linear-gradient(calc(var(--tick) * 60deg + ${i}deg), ${s[0]}, ${s[1]})`:`linear-gradient(${i}deg, ${s[0]}, ${s[1]}, ${s[2]}, ${s[3]}, ${s[4]}, ${s[5]})`;return t}},t.PolkaDots=class extends i{constructor(t){const{styleOptions:s={}}=t;super(t),this.styleOptions={bgPosMultipliers:[0,0,.5,.5],backgroundBlend:!1,baseSize:100,rings:!1,radii:[25,45],triColor:!1,...s}}gradientType(){return"PolkaDots"}generateGradientString(){let t=this.styleOptions.bgPosMultipliers,s=this.styleOptions.baseSize,e=this.styleOptions.rings,i=this.styleOptions.radii,a=this.styleOptions.triColor,n="",o=r(this.colors);const l=this.element.querySelector(".ngrad-background");let p=[`${t[0]*s}px ${t[1]*s}px`,`${t[2]*s}px ${t[3]*s}px`];return this.styleOptions.updateVariable?this.styleOptions.rings?(l.style.setProperty("--first-stop",`calc(var(--tick-sin) * ${i[0]-10}%)`),l.style.setProperty("--second-stop",`calc(var(--tick-cos) * ${i[1]-10}%)`)):(l.style.setProperty("--first-stop",`calc(var(--tick-sin) * ${i[0]}%)`),l.style.setProperty("--second-stop",`calc(var(--tick-cos) * ${i[1]}%)`)):this.styleOptions.rings?(l.style.setProperty("--first-stop",i[0]-10+"%"),l.style.setProperty("--second-stop",i[1]-10+"%")):(l.style.setProperty("--first-stop",`${i[0]}%`),l.style.setProperty("--second-stop",`${i[1]}%`)),n+=e?`radial-gradient(${o[0]} var(--first-stop), ${o[1]} calc(var(--first-stop) + 1%), ${o[1]} calc(var(--first-stop) + 15%), transparent calc(var(--first-stop) + 16%)) ${p[0]}, radial-gradient(${o[1]} var(--second-stop), ${o[0]} calc(var(--second-stop) + 1%), ${o[0]} calc(var(--second-stop) + 15%), transparent calc(var(--second-stop) + 16%)) ${p[1]}`:`radial-gradient(${o[0]} var(--first-stop), transparent calc(var(--first-stop) + 2%)) ${p[0]}, radial-gradient(${o[1]} var(--second-stop), transparent calc(var(--second-stop) + 2%)) ${p[1]}`,a?n+=`, ${o[2]}DD`:this.styleOptions.backgroundBlend?n+=`, ${o[0]}`:n+=`, ${o[0]}66`,console.log(n),n}},t.ThreeTriangles=class extends i{constructor(t){const{styleOptions:s={}}=t;super(t),this.styleOptions={baseSize:60,angle:[-135,135],bands:[20,30,33,40,45],bgPosMultipliers:[0,0,0,0],variant:"",triColor:!1,seamless:!1,...s}}gradientType(){return"ThreeTriangles"}generateGradientString(){let t=this.styleOptions.bgPosMultipliers,s=this.styleOptions.baseSize,e=this.styleOptions.angle,i=this.styleOptions.bands,a=this.styleOptions.triColor,n=this.styleOptions.variant,o="",l=r(this.colors);const p=this.element.querySelector(".ngrad-background");Array.isArray(s)&&(s=s[0]),this.styleOptions.seamless&&(s=this.element.offsetWidth/this.styleOptions.parts),"geometric-bands"==n&&(i=[4,10,18,24,40,44]),"geometric-half-bands"==n&&(i=[4,10,18,24,40,44],t=[0,0,0,.5]);let c=[`${t[0]*s}px ${t[1]*s}px`,`${t[2]*s}px ${t[3]*s}px`];return this.styleOptions.updateVariable?(p.style.setProperty("--first-stop",`calc(var(--tick-sin) * ${3*i[0]}%)`),p.style.setProperty("--second-stop",`${i[2]}%`),p.style.setProperty("--third-stop",`${i[4]}%`)):(p.style.setProperty("--first-stop",`calc(${i[0]}%)`),p.style.setProperty("--second-stop",`${i[2]}%`),p.style.setProperty("--third-stop",`${i[4]}%`)),o=`linear-gradient(${e[0]}deg, ${l[0]} var(--first-stop), transparent calc(var(--first-stop) + 0.5%) ${i[1]}%, ${l[0]} ${i[1]+.5}% var(--second-stop), transparent var(--second-stop) ${i[3]}%, ${l[0]} ${i[3]+.5}% var(--third-stop), transparent calc(var(--third-stop) + 0.5%)) ${c[0]}, linear-gradient(${e[1]}deg, ${l[0]} var(--first-stop), transparent var(--first-stop) ${i[1]}%, ${l[0]} ${i[1]+.5}% var(--second-stop), transparent var(--second-stop) ${i[3]}%, ${l[0]} ${i[3]+.5}% var(--third-stop), transparent calc(var(--third-stop) + 0.5%)) ${c[1]}`,"band-shades"==n&&(o=`linear-gradient(${e[0]}deg, ${l[1]} var(--first-stop), transparent calc(var(--first-stop) + 0.5%) ${i[1]}%, ${l[0]} ${i[1]+.5}% var(--second-stop), transparent calc(var(--second-stop) + 0.5%) ${i[3]}%, ${l[1]} ${i[3]+.5}% var(--third-stop), transparent calc(var(--third-stop) + 0.5%)) ${c[0]}, linear-gradient(${e[1]}deg, ${l[1]} var(--first-stop), transparent calc(var(--first-stop) + 0.5%) ${i[1]}%, ${l[0]} ${i[1]+.5}% var(--second-stop), transparent calc(var(--second-stop) + 0.5%) ${i[3]}%, ${l[1]} ${i[3]+.5}% var(--third-stop), transparent calc(var(--third-stop) + 0.5%)) ${c[1]}`),"half-shades"==n&&(o=`linear-gradient(${e[0]}deg, ${l[0]} var(--first-stop), transparent calc(var(--first-stop) + 0.5%) ${i[1]}%, ${l[0]} ${i[1]+.5}% var(--second-stop), transparent calc(var(--second-stop) + 0.5%) ${i[3]}%, ${l[0]} ${i[3]+.5}% var(--third-stop), transparent calc(var(--third-stop) + 0.5%)) ${c[0]}, linear-gradient(${e[1]}deg, ${l[1]} var(--first-stop), transparent calc(var(--first-stop) + 0.5%) ${i[1]}%, ${l[1]} ${i[1]+.5}% var(--second-stop), transparent calc(var(--second-stop) + 0.5%) ${i[3]}%, ${l[1]} ${i[3]+.5}% var(--third-stop), transparent calc(var(--third-stop) + 0.5%)) ${c[1]}`),o+=a?`, ${l[2]}`:`, ${l[1]}66`,o}},t.UpDownTriangles=class extends i{constructor(t){const{styleOptions:s={}}=t;super(t),this.styleOptions={baseSize:100,angle:[-60,60,120,240],triangleSize:[20,20],bgPosMultipliers:[0,0,0,0,.5,.75,.5,.75],variant:"",triColor:!1,seamless:!1,ratio:1,...s}}gradientType(){return"UpDownTriangles"}generateGradientString(){let t=this.setBaseSize(this.styleOptions.baseSize),s=this.styleOptions.triColor,e=this.styleOptions.triangleSize,i=this.styleOptions.angle,a=this.styleOptions.variant,n="",o=r(this.colors);const l=this.element.querySelector(".ngrad-background");"opposite-stripes"==a&&(this.styleOptions.bgPosMultipliers=[-1/3,0,1,0,-1/3,0,1,0],this.styleOptions.ratio=2.8),"stars"==a&&(this.styleOptions.bgPosMultipliers=[0,-1/3,0,-1/3,0,0,0,0]),"aligned"==a&&(this.styleOptions.bgPosMultipliers=[0,0,0,0,0,0,0,0]);let p=this.styleOptions.bgPosMultipliers,c=[`${p[0]*t}px ${p[1]*t}px`,`${p[2]*t}px ${p[3]*t}px`,`${p[4]*t}px ${p[5]*t}px`,`${p[6]*t}px ${p[7]*t}px`];return this.styleOptions.updateVariable?(l.style.setProperty("--first-stop",`calc(var(--tick-sin) * 20% + ${80-e[0]}%)`),l.style.setProperty("--second-stop",`calc(var(--tick-sin) * 20% + ${80-e[1]}%)`)):(l.style.setProperty("--first-stop",`calc(${100-e[0]}%)`),l.style.setProperty("--second-stop",`calc(${100-e[1]}%)`)),n+=`linear-gradient(${i[0]}deg, transparent var(--first-stop), ${o[0]} calc(var(--first-stop) + 1%)) ${c[0]}, linear-gradient(${i[1]}deg, transparent var(--first-stop), ${o[0]} calc(var(--first-stop) + 1%)) ${c[1]}, linear-gradient(${i[2]}deg, transparent var(--second-stop), ${o[1]} calc(var(--second-stop) + 1%)) ${c[2]}, linear-gradient(${i[3]}deg, transparent var(--second-stop), ${o[1]} calc(var(--second-stop) + 1%)) ${c[3]}`,n+=s?`, ${o[2]}66`:`, ${o[0]}66`,n}},t.ZigZag=class extends i{constructor(t){const{styleOptions:s={}}=t;super(t),this.styleOptions={bgPosMultipliers:[-.5,0,-.5,0,0,0,0,0],bandWidth:0,baseSize:100,translucent:!1,triColor:!1,updateVariable:!1,variant:"",...s}}gradientType(){return"ZigZag"}generateGradientString(){let t="",e=r(this.colors);const i=this.element.querySelector(".ngrad-background");let a=this.styleOptions.bgPosMultipliers,n=this.styleOptions.baseSize,o=this.styleOptions.triColor,l=this.styleOptions.translucent,p=this.styleOptions.bandWidth;p=25+s(p,0,10),"uneven"==this.styleOptions.variant&&(a=[0,0,0,0,-.25,0,-.25,0]),"squares"==this.styleOptions.variant&&(a=[.1,-.1,-.1,-.1,-.1,-.1,.1,-.1]),"square-stripes"==this.styleOptions.variant&&(a=[0,0,0,0,0,-.5,0,.5]),"square-diagonals"==this.styleOptions.variant&&(a=[0,-.75,0,.25,0,-.75,0,.25]),"pinwheel"==this.styleOptions.variant&&(a=[0,0,-.5,-.5,0,0,.5,.5]),"arrows"==this.styleOptions.variant&&(a=[0,0,.5,.5,0,0,0,0]);let c=[`${a[0]*n}px ${a[1]*n}px`,`${a[2]*n}px ${a[3]*n}px`,`${a[4]*n}px ${a[5]*n}px`,`${a[6]*n}px ${a[7]*n}px`];return this.styleOptions.updateVariable?(p=10,i.style.setProperty("--first-stop",`calc(var(--tick-sin) * ${p}% + 25%)`),i.style.setProperty("--second-stop",`calc(var(--tick-sin) * ${p+.1}% + 25%)`)):(i.style.setProperty("--first-stop",`calc(${p}%)`),i.style.setProperty("--second-stop",`calc(${p+.1}%)`)),t+=o?`linear-gradient(135deg, ${e[2]} var(--first-stop), transparent var(--second-stop)) ${c[0]}, linear-gradient(225deg, ${e[1]} var(--first-stop), transparent var(--second-stop)) ${c[1]}, linear-gradient(315deg, ${e[2]} var(--first-stop), transparent var(--second-stop)) ${c[2]}, linear-gradient(45deg, ${e[1]} var(--first-stop), transparent var(--second-stop)) ${c[3]}`:`linear-gradient(135deg, ${e[1]} var(--first-stop), transparent var(--second-stop)) ${c[0]}, linear-gradient(225deg, ${e[1]} var(--first-stop), transparent var(--second-stop)) ${c[1]}, linear-gradient(315deg, ${e[1]} var(--first-stop), transparent var(--second-stop)) ${c[2]}, linear-gradient(45deg, ${e[1]} var(--first-stop), transparent var(--second-stop)) ${c[3]}`,t+=l?`, ${e[0]}66`:`, ${e[0]}`,t}},t.clampValue=s,t.isArrayOfArrays=e,t.setUpGradientColors=r,t}({});
